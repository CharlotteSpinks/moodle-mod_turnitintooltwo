jQuery(document).ready(function($){function enableEditingText(e){$("#tabs-"+e+" .editable_date, #tabs-"+e+" .editable_text").editable("enable")}function disableEditingText(e){$("#tabs-"+e+" .editable_date, #tabs-"+e+" .editable_text").editable("disable")}function getLoadingGif(){var e='<div class="loading_gif"></div>';$("#cboxOverlay").after(e);var t=$(window).scrollTop()+$(window).height()/2;$(".loading_gif").css("top",t+"px")}function hideLoadingGif(){$(".loading_gif").remove()}function getSubmissions(table,assignment_id,part_id,start,refresh_requested,total){$.ajax({dataType:"json",type:"POST",url:"ajax.php",async:!0,data:{action:"get_submissions",assignment:assignment_id,part:part_id,start:start,refresh_requested:refresh_requested[part_id],sesskey:M.cfg.sesskey,total:total},success:function(result){if(eval(result),start=result.end,result.aaData.length>0&&table.fnAddData(result.aaData),result.end<result.total)getSubmissions(table,assignment_id,part_id,start,refresh_requested,result.total);else{$("#"+part_id+"_processing").attr("style","visibility: hidden"),refresh_requested[part_id]=0;var allrefreshed=1;$.each(refresh_requested,function(e,t){1==t&&(allrefreshed=0)}),1==allrefreshed&&($(".refreshing_link").hide(),$(".refresh_link").show()),submitVisibility(),enableEditingText(part_id),result.nonsubmitters>0&&$(".nonsubmitters_link").attr("style","display: block")}},error:function(e,t){$("#"+part_id+"_processing").attr("style","visibility: hidden"),$(".dataTables_empty").html(M.str.turnitintooltwo.tiisubmissionsgeterror)}})}function submitVisibility(){1==$(".upload_box").data("user-type")||1==$(".upload_box").data("eula")?$(".upload_box").show():$(".upload_box").hide()}function refreshRubricSelect(){var e=$("#id_rubric").length?"#id_rubric":"#id_plagiarism_rubric",t=$(e).val();$.ajax({dataType:"json",type:"POST",url:"../mod/turnitintooltwo/ajax.php",data:{action:"refresh_rubric_select",assignment:$('input[name="instance"]').val(),modulename:$('input[name="modulename"]').val(),course:$('input[name="course"]').val()},success:function(i){$($(e)).empty();var a=i;$.each(a,function(t,i){$($(e)).append($("<option>",{value:t,text:i}))}),$(e+' option[value="'+t+'"]').attr("selected","selected")}})}function refreshUserMessages(){$(".messages_loading").show(),$(".messages_amount").html(""),$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"refresh_user_messages",assignment:$("#assignment_id").html()},success:function(e){$(".messages_loading").hide(),$(".messages_amount").html(e)}})}function resetPeermarkSection(e){$("#tabs-"+e+" .toggle_peermarks").hide(),$("#tabs-"+e+" .peermark_count").html(""),$("#tabs-"+e+" .peermark-loading").show(),$("#tabs-"+e+" .peermark_assignments_container").hide()}function refreshPeermarkAssignments(part_id,refresh_requested){var user_role=$(".tii_peermark_manager_launch").length>0?"Instructor":"Learner";$("#tabs-"+part_id+" .peermark_assignments_container").length>0&&(resetPeermarkSection(part_id),$.ajax({dataType:"json",type:"POST",url:"ajax.php",data:{action:"refresh_peermark_assignments",assignment:$("#assignment_id").html(),part:part_id,refresh_requested:refresh_requested,sesskey:M.cfg.sesskey},success:function(data){eval(data),$("#tabs-"+part_id+" .peermark_assignments_container").html(data.peermark_table),$("#tabs-"+part_id+" .peermark-loading").hide(),$("#tabs-"+part_id+" .peermark_count").html(data.no_of_peermarks),data.no_of_peermarks>0?$("#tabs-"+part_id+" .toggle_peermarks").show():$("#tabs-"+part_id+" .toggle_peermarks").hide(),(data.no_of_peermarks>0&&"Instructor"==user_role||data.peermarks_active&&"Learner"==user_role)&&$("#tabs-"+part_id+" .row_peermark_reviews").show(),"true"==$.cookie("show_peermarks_"+$("#assignment_id").html())&&data.no_of_peermarks>0?($(".show_peermarks_"+$("#assignment_id").html()).hide(),$(".hide_peermarks_"+$("#assignment_id").html()).show(),$(".peermark_assignments_container").slideDown()):($(".show_peermarks_"+$("#assignment_id").html()).show(),$(".hide_peermarks_"+$("#assignment_id").html()).hide(),$(".peermark_assignments_container").slideUp())}}))}function initialiseUnanoymiseForm(scope,assignment_id,submission_id){var identifier="a.unanonymise";"row"==scope&&(identifier="#submission_"+submission_id),$(identifier).colorbox({inline:!0,width:"50%",top:"100px",height:"260px",opacity:"0.7",className:"tii_unanonymise_reveal_form",onComplete:function(){var idStr=$(this).attr("id").split("_");if(0==submission_id||void 0==submission_id)var submission_id=idStr[1];0==assignment_id&&(assignment_id=$("#assignment_id").html()),$("#submission_id").html(submission_id),$("#cboxLoadedContent .unanonymise_form").show(),$("#id_reveal").unbind("click"),$("#id_reveal").click(function(){$.ajax({dataType:"json",type:"POST",url:"ajax.php",data:{action:"reveal_submission_name",assignment:assignment_id,submission_id:submission_id,reason:encodeURIComponent($("#id_anonymous_reveal_reason").val()),sesskey:M.cfg.sesskey},success:function(data){if(eval(data),"success"==data.status)$.colorbox.close(),$("#submission_"+submission_id).attr("href",M.cfg.wwwroot+"/user/view.php?id="+data.userid+"&course="+data.courseid),$("#submission_"+submission_id).html(data.name),$("#submission_"+submission_id).removeClass("unanonymise cboxElement");else{var current_msg=$("#unanonymise_desc").html;$("#unanonymise_desc").html(current_msg+" "+data.msg)}}})})},onCleanup:function(){$(".unanonymise_form").hide()}})}function initialiseUploadBox(e,t,i,a){var s=".upload_box";"row"==e&&(s="#upload_"+t+"_"+i+"_"+a);var n="80%",o="80%";$(s).colorbox({onLoad:function(){getLoadingGif(),lightBoxCloseButton(),$(this).hide()},onClosed:function(){hideLoadingGif()},onCleanup:function(){hideLoadingGif();var e=$(this).attr("id").split("_");refreshInboxRow("upload",e[1],e[2],e[3]),$("#tii_close_bar").remove()},iframe:!0,width:n,height:o,opacity:"0.7",className:"upload",transition:"none"})}function initialiseZipDownloads(e){$("#tabs-"+e+" .orig_zip_open, #tabs-"+e+" .pdf_zip_open, #tabs-"+e+" .xls_inbox_open").unbind("click"),$("#tabs-"+e+" .orig_zip_open, #tabs-"+e+" .pdf_zip_open, #tabs-"+e+" .xls_inbox_open").click(function(){var e=$(this).attr("id").split("_");downloadZipFile(e[0]+"_"+e[1],e[2])}),$("#tabs-"+e+" .downloadpdf_box").colorbox({iframe:!0,width:"40%",height:"60%",opacity:"0.7",className:"downloadpdf_window",transition:"none",onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()},onClosed:function(){refreshUserMessages()}}),$(document).on("click","#tabs-"+e+" .gmpdfzip_box",function(t){return $(this).colorbox({open:!0,iframe:!0,width:"786px",height:"300px",opacity:"0.7",className:"gmpdfzip_window",transition:"none",href:function(){var t="";return $("#tabs-"+e+" .inbox_checkbox:checked").each(function(e){t+="&submission_id"+e+"="+$(this).val(),e++}),$(this).attr("href")+t},onLoad:function(){getLoadingGif()},onCleanup:function(){hideLoadingGif()},onClosed:function(){refreshUserMessages()}}),!1})}function lightBoxCloseButton(){$("body").append('<div id="tii_close_bar"><a href="#" onclick="$.colorbox.close(); return false;">'+M.str.turnitintooltwo.closebutton+"</a></div>")}function initialiseDigitalReceipt(){$(".tii_digital_receipt").length>0&&$(".tii_digital_receipt").colorbox({iframe:!0,width:"832px",height:"482px",opacity:"0.7",className:"rubric_view",transition:"none",onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()}})}function initialiseHiddenZipDownloads(e){$("#tabs-"+e+" .origchecked_zip_open").unbind("click"),$("#tabs-"+e+" .origchecked_zip_open").click(function(){var t=$(this).attr("id").split("_");return downloadZipFile(t[0]+"_"+t[1],e),!1})}function initialiseRefreshRow(e,t,i,a){var s=".refresh_row .fa-refresh";"row"==e&&(s="#refreshrow_"+t+"_"+i+"_"+a+" .fa-refresh"),$(s).unbind("click"),$(s).click(function(){$(this).hide(),$(this).siblings(".fa-spinner").css("display","inline-block").addClass("fa-lg");var e=$(this).parent().attr("id").split("_");refreshInboxRow(e[0],e[1],e[2],e[3])})}function initialiseDVLaunchers(e,t,i,a){var s="#"+i+" .download_original_open";"row"==e&&(s="#downloadoriginal_"+t+"_"+i+"_"+a),$(s).unbind("click"),$(s).click(function(){var e=$(this).attr("id").split("_");$(this).children(".score_colour").hasClass("score_colour_")||downloadOriginalFile(e[0],e[1],e[2],e[3])})}function downloadZipFile(e,t){var i=[];"origchecked_zip"!=e&&"gmpdf_zip"!=e||$("#tabs-"+t+" .inbox_checkbox:checked").each(function(e){i[e]=$(this).val()}),$.ajax({type:"POST",url:"ajax.php",dataType:"html",data:{action:e,assignment:$("#assignment_id").html(),part:t,submission_ids:i},success:function(i){$("#"+e+"_form_"+t).html(i),$("#"+e+"_form_"+t).children("form").submit(),$("#"+e+"_form_"+t).html("")}})}function downloadOriginalFile(e,t,i,a){$.ajax({type:"POST",url:M.cfg.wwwroot+"/mod/turnitintooltwo/ajax.php",dataType:"html",data:{action:e,submission:t,assignment:$("#assignment_id").html()},success:function(i){$("#"+e+"_form_"+t).html(i),$("#"+e+"_form_"+t).children("form").submit(),$("#"+e+"_form_"+t).html("")}})}function checkDVClosed(e){window.dvWindow.closed?$("#refresh_"+e).click():setTimeout(function(){checkDVClosed(e)},500)}function submitNothing(user_id,part_id){$("#submitnothing_0_"+part_id+"_"+user_id+" i").attr("class","fa fa-spin fa-spinner fa-lg"),$.ajax({type:"POST",url:"ajax.php",dataType:"json",data:{action:"submit_nothing",assignment:$("#assignment_id").html(),part:part_id,user:user_id,sesskey:M.cfg.sesskey},success:function(data){eval(data),$.cookie("submitnothingaccept",!0,{expires:365}),$("table#"+part_id+" .select_all_checkbox").attr("checked",!1)},error:function(e){$("#submitnothing_0_"+part_id+"_"+user_id+" i").attr("class","fa fa-pencil fa-lg"),$("#submitnothing_0_"+part_id+"_"+user_id).removeClass("disabled"),alert(e.responseText)},complete:function(){refreshInboxRow("submitnothing",0,part_id,user_id)}})}function refreshInboxRow(link,submission_id,part_id,user_id){$.ajax({type:"POST",url:"ajax.php",dataType:"json",data:{action:"refresh_submission_row",assignment:$("#assignment_id").html(),part:part_id,user:user_id,sesskey:M.cfg.sesskey},success:function(data){$("table#"+part_id+" .select_all_checkbox").attr("checked",!1),eval(data);var i=0;0==submission_id?(link+="_0",submission_id=data.submission_id):link=null==data.submission_id&&0!=submission_id?link+"_"+submission_id:link+"_"+data.submission_id,0!=submission_id&&$("#export_links").removeClass("hidden_class"),oTable=$("table#"+part_id).dataTable();var tr=$("#"+link+"_"+part_id+"_"+user_id).parent().parent(),rowindex=tr.index();oTable.fnDeleteRow(tr),oTable.fnAddData(data.row),submitVisibility(),initialiseUploadBox("row",data.submission_id,part_id,user_id),initialiseDVLaunchers("row",data.submission_id,part_id,user_id),initialiseRefreshRow("row",data.submission_id,part_id,user_id),initialiseCheckboxes(data.submission_id,part_id),initialiseUnanoymiseForm("row",$("#assignment_id").html(),data.submission_id)}})}function initialiseCheckboxes(e,t){var i="#tabs-"+t+" .inbox_checkbox";0!=e&&(i="check_"+e),$("#tabs-"+t+" .inbox_checkbox").click(function(){$("table#"+t+" .select_all_checkbox").attr("checked",!1)}),$(document).on("click",i+", .select_all_checkbox",function(){$("#tabs-"+t+" .inbox_checkbox:checked").length>0?($("#tabs-"+t+" .zip_downloads").slideDown(),initialiseHiddenZipDownloads(t)):($("#tabs-"+t+" .origchecked_zip_open").unbind("click"),$("#tabs-"+t+" .zip_downloads").slideUp())})}function showPartDatesBoxes(){for(var e=0;e<=5;e++)e<=$("#id_numparts").val()?$('fieldset[id$="partdates'+e+'"]').slideDown():$('fieldset[id$="partdates'+e+'"]').slideUp()}if($(".js_required").show(),$(".js_hide").hide(),1==$("#id_submissiontype").val()&&$("#id_submissiontext").parent().parent().hide(),2==$("#id_submissiontype").val()&&$("#id_submissionfile").parent().parent().hide(),$("#id_submissionagreement").length&&$("#id_submitbutton").attr("disabled","disabled"),$("#id_submissionagreement").on("click",function(){$(this).is(":checked")?$("#id_submissionagreement").each(function(){$("#id_submitbutton").removeAttr("disabled")}):$("#id_submissionagreement").each(function(){$("#id_submitbutton").attr("disabled","disabled")})}),$(document).on("click",".delete_paper",function(){var e=$(this).data("confirm"),t=M.str.turnitintooltwo[e].replace(/\\n/g,"\n"),i=confirm(t);i&&$.ajax({type:"POST",url:"ajax.php",dataType:"html",data:{action:"deletesubmission",sesskey:M.cfg.sesskey,paper:$(this).data("paper"),part:$(this).data("part"),assignment:$(this).data("assignment")},success:function(){window.location.href=window.location.href}})}),$(document).on("click",".submit_nothing",function(){if(!$(this).hasClass("disabled")){$(this).addClass("disabled");var e=$(this).prop("id").split("_")[2],t=$(this).prop("id").split("_")[3],i=M.str.turnitintooltwo.submitnothingwarning.replace(/<br>/g,"\n").replace(/&#39;/g,"'"),a=$.cookie("submitnothingaccept");a||confirm(i)?submitNothing(t,e):$(this).removeClass("disabled")}}),$(document).on("change","#id_submissiontype",function(){1==$("#id_submissiontype").val()&&($("#id_submissiontext").parent().parent().hide(),$("#id_submissionfile").parent().parent().show()),2==$("#id_submissiontype").val()&&($("#id_submissionfile").parent().parent().hide(),$("#id_submissiontext").parent().parent().show())}),$(document).on("submit",".submission_form_container form",function(){return $("#id_submissiontitle").val().length>0&&($("#general").slideUp("slow"),$(".mod_turnitintooltwo .noticebox").slideUp("slow"),$(".submission_form_container form").slideUp("slow"),$("#submitting_loader").slideDown("slow"),!0)}),$(".toggle_summary").length>0&&($.cookie("show_summary_"+$("#assignment_id").html())||$.cookie("show_summary_"+$("#assignment_id").html(),!0,{expires:30}),"true"==$.cookie("show_summary_"+$("#assignment_id").html())?($(".hide_summary_"+$("#assignment_id").html()).show(),$(".show_summary_"+$("#assignment_id").html()).hide(),$(".introduction").slideDown()):($(".show_summary_"+$("#assignment_id").html()).show(),$(".hide_summary_"+$("#assignment_id").html()).hide(),$(".introduction").slideUp()),$(".toggle_summary i").click(function(){$(this).hasClass("show_summary_"+$("#assignment_id").html())?($.cookie("show_summary_"+$("#assignment_id").html(),!0,{expires:30}),$(".show_summary_"+$("#assignment_id").html()).hide(),$(".hide_summary_"+$("#assignment_id").html()).show(),$(".introduction").slideDown()):($.cookie("show_summary_"+$("#assignment_id").html(),!1,{expires:30}),$(".show_summary_"+$("#assignment_id").html()).show(),$(".hide_summary_"+$("#assignment_id").html()).hide(),$(".introduction").slideUp())})),$(".toggle_peermarks").length>0&&($.cookie("show_peermarks_"+$("#assignment_id").html())||$.cookie("show_peermarks_"+$("#assignment_id").html(),!0,{expires:30}),"true"==$.cookie("show_peermarks_"+$("#assignment_id").html())?($(".hide_peermarks_"+$("#assignment_id").html()).show(),$(".show_peermarks_"+$("#assignment_id").html()).hide(),$(".peermark_assignments_container").slideDown()):($(".show_peermarks_"+$("#assignment_id").html()).show(),$(".hide_peermarks_"+$("#assignment_id").html()).hide(),$(".peermark_assignments_container").slideUp()),$(".toggle_peermarks i").click(function(){$(this).hasClass("show_peermarks_"+$("#assignment_id").html())?($.cookie("show_peermarks_"+$("#assignment_id").html(),!0,{expires:30}),$(".show_peermarks_"+$("#assignment_id").html()).hide(),$(".hide_peermarks_"+$("#assignment_id").html()).show(),$(".peermark_assignments_container").slideDown()):($.cookie("show_peermarks_"+$("#assignment_id").html(),!1,{expires:30}),$(".show_peermarks_"+$("#assignment_id").html()).show(),$(".hide_peermarks_"+$("#assignment_id").html()).hide(),$(".peermark_assignments_container").slideUp())})),$(document).on("click",".show_peermark_instructions, .hide_peermark_instructions",function(){var e=$(this).attr("id").split("_");"show"==e[0]?($("#show_peermark_instructions_"+e[3]).hide(),$("#hide_peermark_instructions_"+e[3]).show(),$("#peermark_instructions_"+e[3]).slideDown()):($("#show_peermark_instructions_"+e[3]).show(),$("#hide_peermark_instructions_"+e[3]).hide(),$("#peermark_instructions_"+e[3]).slideUp())}),showPartDatesBoxes(),$(document).on("change","#id_numparts",function(){showPartDatesBoxes()}),$("#dataTable").length>0&&$("#dataTable").dataTable(),"undefined"!=typeof M.str.turnitintooltwo)var dataTablesLang={sProcessing:'<span class="loading-message">'+M.str.turnitintooltwo.sprocessing+"</span>",sZeroRecords:M.str.turnitintooltwo.szerorecords,sInfo:M.str.turnitintooltwo.sinfo,sSearch:M.str.turnitintooltwo.ssearch,sLengthMenu:M.str.turnitintooltwo.slengthmenu,oPaginate:{sNext:M.str.turnitintooltwo.snext,sPrevious:M.str.turnitintooltwo.sprevious}};if($("#tabs").length>0){var activeTab=0;$("#tab_position").length>0&&(activeTab=$("#tab_position").text()),$("#tabs").tabs({active:activeTab,show:function(){var e=$.fn.dataTable.fnTables(!0);e.length>0&&$(e).dataTable().fnAdjustColumnSizing()}})}$(".enrolledMembers").length>0&&$(".enrolledMembers").dataTable({bProcessing:!0,sAjaxSource:"ajax.php",aoColumnDefs:[{bSortable:!1,sClass:"centered_cell",aTargets:[0]},{sClass:"left",aTargets:[1]}],oLanguage:dataTablesLang,fnServerData:function(e,t,i){$.ajax({dataType:"json",type:"POST",url:e,data:{action:"get_members",assignment:$("#assignment_id").html(),role:$("#user_role").html()},success:function(e){i(e)},error:function(e,t){$(".dataTables_processing").attr("style","visibility: hidden"),$(".dataTables_empty").html(M.str.turnitintooltwo.membercheckerror)}})}});for(var submissionsDataTableColumns=[],visibleCols=[],noOfColumns=$("table.submissionsDataTable th").length/$("table.submissionsDataTable").length,showOrigReport=$("table.submissionsDataTable th.creport").length>0,useGradeMark=$("table.submissionsDataTable th.cgrade").length>0,multipleParts=$("table.submissionsDataTable th.coverallgrade").length>0,i=0;i<noOfColumns;i++)2==i?(submissionsDataTableColumns.push(null),visibleCols.push(!0)):4==i?(submissionsDataTableColumns.push({iDataSort:i-1,sType:"string"}),visibleCols.push(!0)):5==i?(submissionsDataTableColumns.push({sClass:"right"}),visibleCols.push(!0)):7==i||9==i&&showOrigReport||9==i&&!showOrigReport||11==i&&useGradeMark?(submissionsDataTableColumns.push({sClass:"right",iDataSort:i-1,sType:"numeric"}),visibleCols.push(!0)):12==i&&showOrigReport||11==i&&!showOrigReport?(submissionsDataTableColumns.push({sClass:"right"}),visibleCols.push(!0)):1==i||i>=8&&!showOrigReport&&!useGradeMark||i>=10&&(!showOrigReport&&useGradeMark||showOrigReport&&!useGradeMark)||i>=12&&showOrigReport&&useGradeMark?(submissionsDataTableColumns.push({sClass:"center",bSortable:!1}),visibleCols.push(!0)):(0==i||3==i||6==i||8==i&&showOrigReport||8==i&&!showOrigReport||10==i&&useGradeMark)&&(submissionsDataTableColumns.push({bVisible:!1}),visibleCols.push(!1));var partTables=[],refreshRequested=[];$("table.submissionsDataTable").each(function(){var e=$(this).attr("id");refreshRequested[e]=0,partTables[e]=$("table#"+e).dataTable({bProcessing:!0,aoColumns:submissionsDataTableColumns,aLengthMenu:[[10,25,50,100,-1],[10,25,50,100,"All"]],aaSorting:[[2,"asc"],[4,"asc"]],sAjaxSource:"ajax.php",oLanguage:dataTablesLang,sDom:'r<"listbar-container"<"top listbar clearfix"lf>><"dt_pagination clearfix"pi>t<"bottom"><"dt_pagination clearfix"pi>',fnServerData:function(t,i,a){$.ajax({dataType:"json",type:"POST",url:t,data:{action:"initialise_redraw"},success:function(t){disableEditingText(e),a(t),$("#"+e+"_processing").attr("style","visibility: visible"),getSubmissions(partTables[e],$("#assignment_id").html(),e,0,refreshRequested,0)}})},bStateSave:!0,fnStateSave:function(t,i){try{localStorage.setItem(e+"DataTables",JSON.stringify(i))}catch(a){}},fnStateSaveParams:function(e,t){t.abVisCols=visibleCols},fnStateLoad:function(t){try{return JSON.parse(localStorage.getItem(e+"DataTables"))}catch(i){}},fnStateLoadParams:function(e,t){t.abVisCols=visibleCols},fnDrawCallback:function(t){initialiseDigitalReceipt(),initialiseDVLaunchers("all",0,e,0),initialiseRefreshRow("all",0,e,0),initialiseUploadBox("all",0,0,0),initialiseZipDownloads(e),initialiseCheckboxes(0,e),initialiseUnanoymiseForm("all",0,0)}})}),$("table.submissionsDataTable").each(function(){var e=$(this).attr("id");refreshPeermarkAssignments(e,0)}),$(".messages_amount").length>0&&refreshUserMessages(),$(".tii_table_functions").each(function(){var e=$(this).attr("id").split("tii_table_functions_")[1],t=$("#tii_table_functions_"+e).html();$("#tii_table_functions_"+e).remove(),$("#"+e+"_length").after(t),$(".messages_inbox").show(),$("#refresh_"+e).show(),$("#refreshing_"+e).hide()});var zip_downloads=$(".zip_downloads");if($.each(zip_downloads,function(){var e=$(this).attr("id").split("_")[1];$(this).remove(),$("#"+e+"_length").after($(this))}),"Learner"==$("#user_role").html()&&$(".dataTables_length, .dataTables_filter, .dt_pagination").hide(),$(".refresh_link").click(function(){return $(this).is(":visible")&&($(".refresh_link").hide(),$(".refreshing_link").show(),$("table.submissionsDataTable").each(function(){refreshRequested[$(this).attr("id")]=1,partTables[$(this).attr("id")].fnReloadAjax(),partTables[$(this).attr("id")].fnStandingRedraw()})),!1}),$(".submission_failure_msg").length>0&&window.parent.$(".upload_box").colorbox.resize({width:"800px",height:"240px"}),$(".enrol_link").click(function(){$("#enrolling_error").hide(),$(".enrol_link").hide(),$(".enrolling_container").show(),$.ajax({type:"POST",url:"ajax.php",dataType:"html",data:{action:"enrol_all_students",assignment:$("#assignment_id").html(),sesskey:M.cfg.sesskey},success:function(e){window.location.href=window.location.href},error:function(e,t){$(".enrol_link").show(),$(".enrolling_container").hide(),$("#enrolling_error").show()}})}),$(".rubric_manager_launch").length>0&&$(".rubric_manager_launch").colorbox({iframe:!0,width:"832px",height:"682px",opacity:"0.7",className:"rubric_manager",transition:"none",onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){hideLoadingGif(),"rubric_manager_inbox_launch"!=$(this).attr("id")&&refreshRubricSelect(),$("#tii_close_bar").remove()}}),$(".rubric_view_launch").length>0&&$(".rubric_view_launch").colorbox({iframe:!0,width:"832px",height:"682px",opacity:"0.7",className:"rubric_view",transition:"none",onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()}}),$("#id_rubric, #id_plagiarism_rubric").focus(function(){""!=$('input[name="instance"]').val()&&"Y"!=$('input[name="rubric_warning_seen"]').val()&&confirm(M.str.turnitintooltwo.changerubricwarning)&&$('input[name="rubric_warning_seen"]').val("Y")}),($(".quickmark_manager_launch").length>0||$(".plagiarism_turnitin_quickmark_manager_launch").length>0)&&$(".quickmark_manager_launch, .plagiarism_turnitin_quickmark_manager_launch").colorbox({iframe:!0,width:"770px",height:"600px",opacity:"0.7",className:"quickmark_manager",transition:"none",onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()}}),$(".tii_peermark_manager_launch").length>0&&$(".tii_peermark_manager_launch").colorbox({iframe:!0,width:"802px",height:"772px",opacity:"0.7",className:"peermark_manager",transition:"none",onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()},onClosed:function(){var e=$(this).attr("id").split("_");refreshPeermarkAssignments(e[2],1)}}),$(".tii_peermark_reviews_launch").length>0&&$(".tii_peermark_reviews_launch").colorbox({iframe:!0,width:"802px",height:"772px",opacity:"0.7",className:"peermark_reviews",transition:"none",onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()}}),$(".messages_inbox").length>0&&$(".messages_inbox").colorbox({iframe:!0,width:"772px",height:"772px",opacity:"0.7",className:"messages",transition:"none",closeButton:!1,onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()}}),$(".nonsubmitters_link").length>0&&$(".nonsubmitters_link").colorbox({iframe:!0,width:"740px",height:"540px",opacity:"0.7",className:"nonsubmitters",transition:"none",closeButton:!1,onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()}}),$(".nonsubmittersformsuccessmsg").length>0&&(hideLoadingGif(),window.parent.$(".nonsubmitters").colorbox.resize({width:"740px",height:"120px"})),$(".rubric_view_launch").length>0&&$(".rubric_view_launch").colorbox({iframe:!0,width:"832px",height:"682px",opacity:"0.7",className:"rubric_view",transition:"none",onLoad:function(){lightBoxCloseButton(),getLoadingGif()},onCleanup:function(){$("#tii_close_bar").remove(),hideLoadingGif()}}),$(document).on("click",".default_open, .origreport_open, .grademark_open",function(){var e=!0,t=$(this).attr("id").split("_"),i=$("#date_due_"+t[2]).html(),a=moment(i).unix(),s=t[0],n=t[1],o=t[2];if(a>moment().unix()&&$(this).hasClass("graded_warning")&&(confirm(M.str.turnitintooltwo.resubmissiongradewarn)||(e=!1)),e){dvWindow=window.open("","_blank");var r='<div style="text-align:center;">';r+='<img src="'+M.cfg.wwwroot+'/mod/turnitintooltwo/pix/tiiIcon.svg" style="width:100px; height: 100px">',r+='<p style="font-family: Arial, Helvetica, sans-serif;">'+M.str.turnitintooltwo.loadingdv+"</p>",r+="</div>",$(dvWindow.document.body).html(r),$.ajax({type:"POST",url:M.cfg.wwwroot+"/mod/turnitintooltwo/ajax.php",dataType:"json",data:{action:s,submission:n,assignment:$("#assignment_id").html()},success:function(e){$(dvWindow.document.body).html(r+e),dvWindow.document.forms[0].submit(),dvWindow.document.close(),checkDVClosed(o)}})}}),$("#id_rubric, #id_plagiarism_rubric").length>0&&refreshRubricSelect(),self!=top&&"box"==$("#view_context").html()?$("html").css("background","none"):self!=top&&"box_solid"==$("#view_context").html()&&$("html").css("background","#FFF"),$(".editable_postdue").on("click",function(){1==$(this).data("anon")&&alert(M.str.turnitintooltwo.postdate_warning)}),$(".editable_text").length>0){$.fn.editable.defaults.mode="inline",$.fn.editable.defaults.url="ajax.php",$.fn.editable.defaults.onblur="submit",$.fn.editable.defaults.showbuttons=!1,$.fn.editable.defaults.ajaxOptions={dataType:"json"},$(".editable_text").editable({validate:function(e){if($(this).attr("id").indexOf("marks_")>=0&&(Math.floor(e)!=e||!$.isNumeric(e)||e.indexOf(".")!=-1))return M.str.turnitintooltwo.maxmarkserror},success:function(e,t){if(!e.success)return e.msg;if("maxmarks"==e.field)$("#refresh_"+e.partid).click();else if("partname"==e.field){var i=$(this).parentsUntil(".ui-tabs-panel").parent().attr("aria-labelledby");$("#"+i).text(t)}}}),$("#export_options").hasClass("tii_export_options_hide")&&($("#export_options").hide(),$(".export_data").html('<span class="empty-dash">--</span>')),$(".editable_postdue").on("click",function(){var e=$(this);$.ajax({type:"POST",url:"ajax.php",dataType:"json",data:{action:"check_anon",part:e.data("pk"),assignment:$("#assignment_id").html()},success:function(t){e.data("anon",t.anon),e.data("unanon",t.unanon),e.data("submitted",t.submitted)}})});var theDate=new Date;$(".editable_date").editable({type:"combodate",format:"YYYY-MM-DD HH:mm",viewformat:"D MMM YYYY, HH:mm",template:"D MMM YYYY  HH:mm",combodate:{minuteStep:1,minYear:2e3,maxYear:theDate.getFullYear()+2,smartDays:!0},validate:function(e){if(e.format("X")<moment().unix()&&$(this).hasClass("editable_postdue")&&1==$(this).data("anon")&&0==$(this).data("unanon")&&1==$(this).data("submitted")&&!confirm(M.str.turnitintooltwo.disableanonconfirm))return $(".editable-open").editableContainer("hide")," "},success:function(e,t){return e.success?($("#refresh_"+e.partid).click(),void("tii_export_options_hide"==e.export_option?($("#export_options").hide(),$(".export_data").html('<span class="empty-dash">--</span>')):($(".empty-dash").remove(),$("#export_options").show()))):e.msg}}),$(".editable_date").click(function(){if($(this).hasClass("editable-disabled"))return!1}),$(".editable_date, .editable_text").on("shown",function(e,t){var i=$(this).prop("id");$(".editable_date, .editable_text").not("#"+i).editable("disable"),$(".submit_nothing").addClass("disabled")}),$(".editable_date, .editable_text").on("hidden",function(){var e=$(this).prop("id");$(".editable_date, .editable_text").not("#"+e).editable("enable"),$(".submit_nothing").removeClass("disabled")})}$("#inbox_form form, .launch_form form").submit(),$(".turnitin_eula_link").length>0&&$(".turnitin_eula_link").colorbox({iframe:!0,width:"766px",height:"596px",opacity:"0.7",className:"eula_view",scrolling:"false",onLoad:function(){getLoadingGif()},onComplete:function(){$(window).on("message",function(e){var t="undefined"==typeof e.data?e.originalEvent.data:e.data;$.ajax({type:"POST",url:M.cfg.wwwroot+"/mod/turnitintooltwo/ajax.php",dataType:"json",data:{action:"acceptuseragreement",message:t,sesskey:M.cfg.sesskey},success:function(e){window.location.reload()},error:function(e){window.location.reload()}})})},onCleanup:function(){hideLoadingGif()}}),$("#tii_receipt_print").click(function(){window.print()}),$(".select_all_checkbox").on("click",function(){var e=$(this).parent().parent().parent().parent().attr("id");$(this).is(":checked")?($("#"+e+" .inbox_checkbox").length&&$("#tabs-"+e+" .zip_downloads").slideDown(),$("#"+e+" .inbox_checkbox").each(function(){$(this).prop("checked",!0)})):($("#"+e+" .inbox_checkbox").each(function(){$(this).prop("checked",!1)}),$("#"+e+" .inbox_checkbox").length&&$("#tabs-"+e+" .zip_downloads").slideUp())}),$("[id^=fitem_id_dtpost] select").change(function(){var e=$(this).parent().parent().parent(),t=buildUnixDate("#fitem_id_dtpost",e.data("partId"));t<moment().unix()&&1==e.data("anon")&&0==e.data("unanon")&&1==e.data("submitted")&&alert(M.str.turnitintooltwo.anonalert)});var buildUnixDate=function(e,t){var i=["_day","_month","_year","_hour","_minute"];$this=$(e+t);var a="";return $.each(i,function(e,i){a+=$this.find("[id$="+t+i+"] option:selected").text(),"_year"===i?a+=" ":"_hour"===i?a+=":":"_minute"!==i&&(a+="-")}),moment(a,"DD-MMMM-YYYY hh:mm").unix()}}),jQuery(document).ready(function($){function initialiseEditEndDate(){$("a.edit_course_end_link").colorbox({inline:!0,width:"60%",top:"100px",background:"#fff",height:"260px",opacity:"0.7",className:"edit_end_date_form",onLoad:function(){lightBoxCloseButton()},onComplete:function(){var current_date=$("#"+$(this).attr("id")+" span").attr("id");current_date=current_date.split("_"),$("#id_new_course_end_date_day").val(current_date[1]),$("#id_new_course_end_date_month").val(current_date[2]),$("#id_new_course_end_date_year").val(current_date[3]);var idStr=$(this).attr("id").split("_"),tii_course_id=idStr[2];$('input[name="tii_course_id"]').val(tii_course_id),$('input[name="tii_course_title"]').val($("a#course_"+tii_course_id).html()),$("#cboxLoadedContent .edit_course_end_date_form").show(),$("#dateselector-calendar-panel").css("z-index","9999"),$("#id_save_end_date").click(function(){$.ajax({dataType:"json",type:"POST",url:"ajax.php",data:{action:"edit_course_end_date",tii_course_id:tii_course_id,tii_course_title:$("a#course_"+tii_course_id).html(),sesskey:M.cfg.sesskey,end_date_d:$("#id_new_course_end_date_day").val(),end_date_m:$("#id_new_course_end_date_month").val(),end_date_y:$("#id_new_course_end_date_year").val()},success:function(data){if(eval(data),"success"==data.status)parent.$.fn.colorbox.close(),$("#course_date_"+tii_course_id+" span").html(data.end_date);else{var current_msg=$("#edit_end_date_desc").html;$("#edit_end_date_desc").html(current_msg+" "+data.msg)}}})})},onCleanup:function(){$(".edit_course_end_date_form").hide(),$("#tii_close_bar").remove()}})}function lightBoxCloseButton(){$("body").append('<div id="tii_close_bar"><a href="#" onclick="$.colorbox.close(); return false;">'+M.str.turnitintooltwo.closebutton+"</a></div>");
}function initialiseCourseRecreation(){var e=$(window).width(),t="80%";e<1e3&&(t="860px");var i=$(window).width(),a="80%";i<700&&(a="600px"),$("a.course_recreate").colorbox({iframe:!0,width:t,height:a,top:"100px",className:"migration",opacity:"0.7",onLoad:function(){lightBoxCloseButton()},onCleanup:function(){$("#tii_close_bar").remove()}}),$(".browser_checkbox").click(function(){$(".browser_checkbox:checked").length>0?$(".create_checkboxes").slideDown():$(".create_checkboxes").slideUp()})}function initialiseCourseBrowserButtons(e){$("#id_create_course").click(function(){$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"create_course",tii_course_id:$("#tii_course_id").html(),tii_course_name:encodeURIComponent($("#tii_course_name").html()),course_name:encodeURIComponent($("#id_coursename").val()),course_category:$("#id_coursecategory").val(),sesskey:M.cfg.sesskey},success:function(t){var i=jQuery.parseJSON(t);hideCourseCreationOptions(i,e)}})}),$("#id_update_course").click(function(){$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"link_course",tii_course_id:$("#tii_course_id").html(),tii_course_name:$("#tii_course_name").html(),course_to_link:$("#id_coursetolink").val(),sesskey:M.cfg.sesskey},success:function(t){var i=jQuery.parseJSON(t);hideCourseCreationOptions(i,e)}})})}function hideCourseCreationOptions(e,t){if(0!=e){$("#course_id").html(e.courseid);var i='input[name="check_'+$("#tii_course_id").html()+'"]';parent.$(i).hide();var a="#tick_"+$("#tii_course_id").html();parent.$(a).show(),$('fieldset[id$="create_course_fieldset"]').parent().slideToggle(),$('fieldset[id$="update_course_fieldset"]').parent().slideToggle(),$("#or_container").hide(),$("#existing_course_title_span").html(e.coursename),$(".existing_course_title_h3").removeClass("hidden_class"),$(".assignmentids_check").length>0&&($(".assignmentids_check").removeAttr("disabled"),$("#id_assignmentname").removeAttr("disabled"),$("#id_create_assignment").removeAttr("disabled")),$(".assignmentids_check").change(function(){$(".assignmentids_check").filter(":checked").length>=5?$(".assignmentids_check").not(":checked").attr("disabled","disabled"):$(".assignmentids_check").removeAttr("disabled")}),initialiseCreateAssignmentButton(t)}}function initialiseCreateAssignmentButton(e){$("#id_create_assignment").unbind("click"),$("#id_create_assignment").click(function(){var t="";$(".assignmentids_check:checked").each(function(e){t+=$(this).val()+","}),","==t.charAt(t.length-1)&&t.substring(0,t.length-1),$("#id_create_assignment").attr("disabled","disabled"),$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"create_assignment",course_id:$("#course_id").html(),assignment_name:$("#id_assignmentname").val(),parts:t,sesskey:M.cfg.sesskey},success:function(t){e.fnReloadAjax(),e.fnStandingRedraw(),$("#id_assignmentname").removeAttr("disabled"),$("#id_create_assignment").removeAttr("disabled"),$(".assignmentids_check").removeAttr("disabled")}})})}$(".submissionsDataTable thead tr, #courseBrowserTable thead tr").toggleClass("header");var dataTablesLang={nointegration:M.str.turnitintooltwo.nointegration,sProcessing:M.str.turnitintooltwo.sprocessing,sZeroRecords:M.str.turnitintooltwo.szerorecords,sInfo:M.str.turnitintooltwo.sinfo,sSearch:M.str.turnitintooltwo.ssearch,sLengthMenu:M.str.turnitintooltwo.slengthmenu,sInfoEmpty:M.str.turnitintooltwo.semptytable,oPaginate:{sNext:M.str.turnitintooltwo.snext,sPrevious:M.str.turnitintooltwo.sprevious}};$("#unlinkUserTable").dataTable({bProcessing:!0,bServerSide:!0,oLanguage:dataTablesLang,aaSorting:[[2,"asc"]],aLengthMenu:[[10,25,50,100,-1],[10,25,50,100,"All"]],sAjaxSource:"ajax.php?action=get_users",aoColumns:[{bSortable:!1,fnCreatedCell:function(e,t,i,a,s){$(e).addClass("centered_cell")}},null,{aDataSort:[2,3]},{aDataSort:[3,2]},null],fnDrawCallback:function(){$('input[name="selectallcb"]').attr("checked",!1)}}),$("#filesTable").dataTable({bProcessing:!0,bServerSide:!0,oLanguage:dataTablesLang,sAjaxSource:"ajax.php?action=get_files",aoColumns:[null,null,null,{sClass:"filename c0",sWidth:"40%"},null,{sClass:"fullname c1",sWidth:"35%"},null,{sClass:"created c2",sWidth:"22%"},{sClass:"remove c3",sWidth:"3%"}],aoColumnDefs:[{bSearchable:!0,bVisible:!1,aTargets:[0]},{bSearchable:!0,bVisible:!1,aTargets:[1]},{bSearchable:!0,bVisible:!1,aTargets:[2]},{bSearchable:!0,bVisible:!0,aTargets:[3]},{bSearchable:!0,bVisible:!1,aTargets:[4]},{bSearchable:!0,bVisible:!0,aTargets:[5]},{bSearchable:!0,bVisible:!1,aTargets:[6]},{bSearchable:!0,bVisible:!0,aTargets:[7]},{bSearchable:!0,bVisible:!0,aTargets:[8]}],fnDrawCallback:function(e){if(0!=e.aiDisplay.length)for(var t=$("#filesTable tbody tr"),i=t[0].getElementsByTagName("td").length,a="",s=0;s<t.length;s++){var n=(e._iDisplayStart+s,e.aoData[e.aiDisplay[s]]._aData[0]);if(n!=a){var o=document.createElement("tr"),r=document.createElement("td");r.colSpan=i,r.className="group",r.innerHTML=n,o.appendChild(r),t[s].parentNode.insertBefore(o,t[s]),a=n}}},aaSortingFixed:[[0,"asc"]],aaSorting:[[1,"asc"]],sDom:'lfr<"giveHeight"t>ip'}),$.datepicker.regional[""].dateFormat="d M yy",$.datepicker.setDefaults($.datepicker.regional[""]);var courseBrowserTable=$("#courseBrowserTable").dataTable({bProcessing:!0,oLanguage:dataTablesLang,aaSorting:[[6,"asc"]],sAjaxSource:"ajax.php",aoColumnDefs:[{bSearchable:!1,bSortable:!1,sWidth:"5%",bVisible:!0,aTargets:[0],fnCreatedCell:function(e){$(e).addClass("center")}},{bSearchable:!0,bVisible:!0,sWidth:"45%",iDataSort:6,aTargets:[1]},{bSearchable:!0,bVisible:!0,sWidth:"10%",aTargets:[2]},{bSearchable:!0,bVisible:!0,sWidth:"20%",iDataSort:7,aTargets:[3],fnCreatedCell:function(e){$(e).addClass("right")}},{bSearchable:!1,bVisible:!0,sWidth:"10%",aTargets:[4],fnCreatedCell:function(e){$(e).addClass("right")}},{bSearchable:!0,bVisible:!0,sWidth:"10%",aTargets:[5],fnCreatedCell:function(e){$(e).addClass("center")}},{bSearchable:!0,bVisible:!1,aTargets:[6]},{bSearchable:!0,bVisible:!1,aTargets:[7]}],fnServerData:function(e,t,i){$.ajax({dataType:"json",type:"POST",url:e,data:{action:"search_classes",course_title:$("#search_course_title").val(),course_integration:$("#search_course_integration").val(),course_end_date:$("#search_course_end_date").val(),sesskey:M.cfg.sesskey},success:function(e){i(e)}})},bStateSave:!0,fnStateSave:function(e,t){try{localStorage.setItem(uid+"DataTables",JSON.stringify(t))}catch(i){}},fnStateLoad:function(e){try{return JSON.parse(localStorage.getItem(uid+"DataTables"))}catch(t){}},fnDrawCallback:function(){$('input[name="selectallcb"]').attr("checked",!1),initialiseCourseRecreation(),initialiseEditEndDate(),$("#search_courses_button").removeAttr("disabled")}});$("#search_courses_button").click(function(){return $(this).attr("disabled","disabled"),courseBrowserTable.fnReloadAjax(),courseBrowserTable.fnStandingRedraw(),!1}),$("#search_course_end_date").datepicker();var oTable=$("#assignmentBrowserTable").dataTable({bProcessing:!0,oLanguage:dataTablesLang,sAjaxSource:"ajax.php",fnServerData:function(sSource,aoData,fnCallback){$("#id_create_course").attr("disabled","disabled"),$("#id_update_course").attr("disabled","disabled"),$("#assignmentBrowserTable").length>0&&$(".side-pre-only #page-content #region-main").css({"margin-left":"0px"}),$("#id_assignmentname").attr("disabled","disabled"),$("#id_create_assignment").attr("disabled","disabled"),$.ajax({dataType:"json",type:"POST",url:sSource,data:{action:"get_assignments",tii_course_id:$("#tii_course_id").html(),sesskey:M.cfg.sesskey},success:function(result){eval(result),initialiseCourseBrowserButtons(oTable),fnCallback(result),"0"!=$("#course_id").html()&&result.number_of_assignments>0?($("#id_assignmentname").removeAttr("disabled"),$("#id_create_assignment").removeAttr("disabled"),$(".assignmentids_check").removeAttr("disabled"),initialiseCreateAssignmentButton(oTable)):($("#id_assignmentname").attr("disabled","disabled"),$("#id_create_assignment").attr("disabled","disabled"),$(".assignmentids_check").attr("disabled","disabled")),$("#id_create_course").removeAttr("disabled"),$("#id_update_course").removeAttr("disabled")}})},aoColumnDefs:[{bSearchable:!1,bVisible:!0,aTargets:[0]},{bSearchable:!0,bVisible:!0,aTargets:[1],fnCreatedCell:function(e){$(e).addClass("nowrap")}},{bSearchable:!0,bVisible:!0,aTargets:[2]},{bSearchable:!0,bVisible:!0,aTargets:[3]}]});if($("#create_classes_button").colorbox({iframe:!0,width:"60%",top:"200px",height:"124px",opacity:"0.7",className:"course_creation",href:function(){var e=$(".create_course_category").val(),t=$(".create_assignment_checkbox").is(":checked")?"1":"0",i="";$(".browser_checkbox:checked").each(function(e){i+="&class_id"+e+"="+$(this).val(),e++});var a=window.location.href,s=a.replace("cmd=courses","cmd=multiple_class_recreation");return s+"&view_context=box&category="+e+"&assignments="+t+i+"&sesskey="+M.cfg.sesskey},onCleanup:function(){window.location=window.location}}),$("#class_ids").length>0){$(".side-pre-only #page-content #region-main").css({"margin-left":"0px"}),$(".has-region-side-pre #page-content #region-main").css({width:"100%","margin-top":"-30px"});var class_ids=$("#class_ids").html();$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"create_courses",class_ids:class_ids,course_category:$("#course_category").html(),create_assignments:$("#create_assignments").html(),sesskey:M.cfg.sesskey},success:function(e){$("#course_creation_status").html(e)}})}}),jQuery(document).ready(function($){if($(".settingsform fieldset div.formsettingheading").length>0){var tabmenu=$(".settingsform fieldset div.formsettingheading:first").html();tabmenu.indexOf("tabtree")>=0&&($(".settingsform fieldset div.formsettingheading:first").remove(),$(".settingsform h2:first").after(tabmenu))}$('input[name="selectallcb"]').click(function(){$(this).prop("checked")?($(".browser_checkbox").prop("checked",!0),$(".browser_checkbox:checked").length>0?$(".create_checkboxes").slideDown():$(".create_checkboxes").slideUp()):($(".browser_checkbox").prop("checked",!1),$(".create_checkboxes").slideUp())}),$(".tii_upgrade_check").click(function(e){e.preventDefault();var t="ajax.php";$(".settingsform fieldset div.formsettingheading").length>0&&(t="../mod/turnitintooltwo/ajax.php"),$(".tii_upgrade_check").hide(),$(".tii_upgrading_check").css("display","inline-block");var i=$(this).attr("id").split("_")[1];$.ajax({type:"POST",url:t,dataType:"html",data:{action:"check_upgrade",current_version:i,sesskey:M.cfg.sesskey},success:function(e){var e=$.parseJSON(e);1===e.update?($(".tii_upgrade_check").hide(),$(".tii_upgrading_check").hide(),$(".tii_no_upgrade").html('<a href="'+e.file[0]+'">'+M.str.turnitintooltwo.upgradeavailable+"</a>")):($(".tii_upgrading_check").hide(),$(".tii_upgrade_check").show())}})}),$(".test_connection").length>0&&(""==$("#id_s_turnitintooltwo_accountid").val()&&""==$("#id_s_turnitintooltwo_secretkey").val()||($(".test_connection").show(),$("#test_link").show()),$("#id_s_turnitintooltwo_accountid, #id_s_turnitintooltwo_secretkey, #id_s_turnitintooltwo_apiurl").keyup(function(){$("#testing_container").hide();var e=$("#id_s_turnitintooltwo_accountid").val(),t=$("#id_s_turnitintooltwo_secretkey").val();e=e.trim(),t=t.trim(),0==e.length||0==t.length?($("#test_result").hide(),$(".test_connection").hide()):($(".test_connection").show(),$("#test_link").show())}),$("#test_link").click(function(){$("#test_result").hide(),$("input, #id_s_turnitintooltwo_apiurl").prop("disabled",!0),$("#test_link").hide(),$("#test_result").css("opacity",""),$("#test_result").removeClass("test_link_success test_link_fail"),$("#testing_container").show();var url="ajax.php";$(".settingsform fieldset div.formsettingheading").length>0&&(url="../mod/turnitintooltwo/ajax.php");var accountid=$("#id_s_turnitintooltwo_accountid").val(),accountshared=$("#id_s_turnitintooltwo_secretkey").val(),accounturl=$("#id_s_turnitintooltwo_apiurl").val();$.ajax({type:"POST",url:url,dataType:"json",data:{action:"test_connection",sesskey:M.cfg.sesskey,accountid:accountid,accountshared:accountshared,url:accounturl},success:function(data){eval(data),$("#testing_container").hide(),"success"==data.connection_status?$("#test_result").addClass("test_link_success"):$("#test_result").addClass("test_link_fail"),$("#test_result").html(data.msg),$("#test_result").show(),$("#test_link").show(),$("input, #id_s_turnitintooltwo_apiurl").prop("disabled",!1)}})}))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
