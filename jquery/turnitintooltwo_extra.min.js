jQuery(document).ready(function($){function initialiseEditEndDate(){$("a.edit_course_end_link").colorbox({inline:!0,width:"60%",top:"100px",background:"#fff",height:"260px",opacity:"0.7",className:"edit_end_date_form",onLoad:function(){lightBoxCloseButton()},onComplete:function(){var current_date=$("#"+$(this).attr("id")+" span").attr("id");current_date=current_date.split("_"),$("#id_new_course_end_date_day").val(current_date[1]),$("#id_new_course_end_date_month").val(current_date[2]),$("#id_new_course_end_date_year").val(current_date[3]);var idStr=$(this).attr("id").split("_"),tii_course_id=idStr[2];$('input[name="tii_course_id"]').val(tii_course_id),$('input[name="tii_course_title"]').val($("a#course_"+tii_course_id).html()),$("#cboxLoadedContent .edit_course_end_date_form").show(),$("#dateselector-calendar-panel").css("z-index","9999"),$("#id_save_end_date").click(function(){$.ajax({dataType:"json",type:"POST",url:"ajax.php",data:{action:"edit_course_end_date",tii_course_id:tii_course_id,tii_course_title:$("a#course_"+tii_course_id).html(),sesskey:M.cfg.sesskey,end_date_d:$("#id_new_course_end_date_day").val(),end_date_m:$("#id_new_course_end_date_month").val(),end_date_y:$("#id_new_course_end_date_year").val()},success:function(data){if(eval(data),"success"==data.status)parent.$.fn.colorbox.close(),$("#course_date_"+tii_course_id+" span").html(data.end_date);else{var current_msg=$("#edit_end_date_desc").html;$("#edit_end_date_desc").html(current_msg+" "+data.msg)}}})})},onCleanup:function(){$(".edit_course_end_date_form").hide(),$("#tii_close_bar").remove()}})}function lightBoxCloseButton(){$("body").append('<div id="tii_close_bar"><a href="#" onclick="$.colorbox.close(); return false;">'+M.str.turnitintooltwo.closebutton+"</a></div>")}function initialiseCourseRecreation(){var e=$(window).width(),a="80%";e<1e3&&(a="860px");var t=$(window).width(),s="80%";t<700&&(s="600px"),$("a.course_recreate").colorbox({iframe:!0,width:a,height:s,top:"100px",className:"migration",opacity:"0.7",onLoad:function(){lightBoxCloseButton()},onCleanup:function(){$("#tii_close_bar").remove()}}),$(".browser_checkbox").click(function(){$(".browser_checkbox:checked").length>0?$(".create_checkboxes").slideDown():$(".create_checkboxes").slideUp()})}function initialiseCourseBrowserButtons(e){$("#id_create_course").click(function(){$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"create_course",tii_course_id:$("#tii_course_id").html(),tii_course_name:encodeURIComponent($("#tii_course_name").html()),course_name:encodeURIComponent($("#id_coursename").val()),course_category:$("#id_coursecategory").val(),sesskey:M.cfg.sesskey},success:function(a){var t=jQuery.parseJSON(a);hideCourseCreationOptions(t,e)}})}),$("#id_update_course").click(function(){$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"link_course",tii_course_id:$("#tii_course_id").html(),tii_course_name:$("#tii_course_name").html(),course_to_link:$("#id_coursetolink").val(),sesskey:M.cfg.sesskey},success:function(a){var t=jQuery.parseJSON(a);hideCourseCreationOptions(t,e)}})})}function hideCourseCreationOptions(e,a){if(0!=e){$("#course_id").html(e.courseid);var t='input[name="check_'+$("#tii_course_id").html()+'"]';parent.$(t).hide();var s="#tick_"+$("#tii_course_id").html();parent.$(s).show(),$('fieldset[id$="create_course_fieldset"]').parent().slideToggle(),$('fieldset[id$="update_course_fieldset"]').parent().slideToggle(),$("#or_container").hide(),$("#existing_course_title_span").html(e.coursename),$(".existing_course_title_h3").removeClass("hidden_class"),$(".assignmentids_check").length>0&&($(".assignmentids_check").removeAttr("disabled"),$("#id_assignmentname").removeAttr("disabled"),$("#id_create_assignment").removeAttr("disabled")),$(".assignmentids_check").change(function(){$(".assignmentids_check").filter(":checked").length>=5?$(".assignmentids_check").not(":checked").attr("disabled","disabled"):$(".assignmentids_check").removeAttr("disabled")}),initialiseCreateAssignmentButton(a)}}function initialiseCreateAssignmentButton(e){$("#id_create_assignment").unbind("click"),$("#id_create_assignment").click(function(){var a="";$(".assignmentids_check:checked").each(function(e){a+=$(this).val()+","}),","==a.charAt(a.length-1)&&a.substring(0,a.length-1),$("#id_create_assignment").attr("disabled","disabled"),$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"create_assignment",course_id:$("#course_id").html(),assignment_name:$("#id_assignmentname").val(),parts:a,sesskey:M.cfg.sesskey},success:function(a){e.fnReloadAjax(),e.fnStandingRedraw(),$("#id_assignmentname").removeAttr("disabled"),$("#id_create_assignment").removeAttr("disabled"),$(".assignmentids_check").removeAttr("disabled")}})})}$(".submissionsDataTable thead tr, #courseBrowserTable thead tr").toggleClass("header");var dataTablesLang={nointegration:M.str.turnitintooltwo.nointegration,sProcessing:M.str.turnitintooltwo.sprocessing,sZeroRecords:M.str.turnitintooltwo.szerorecords,sInfo:M.str.turnitintooltwo.sinfo,sSearch:M.str.turnitintooltwo.ssearch,sLengthMenu:M.str.turnitintooltwo.slengthmenu,sInfoEmpty:M.str.turnitintooltwo.semptytable,oPaginate:{sNext:M.str.turnitintooltwo.snext,sPrevious:M.str.turnitintooltwo.sprevious}};$("#unlinkUserTable").dataTable({bDestroy:!0,bProcessing:!0,bServerSide:!0,oLanguage:dataTablesLang,aaSorting:[[2,"asc"]],aLengthMenu:[[10,25,50,100,-1],[10,25,50,100,"All"]],sAjaxSource:"ajax.php?action=get_users",aoColumns:[{bSortable:!1,fnCreatedCell:function(e,a,t,s,i){$(e).addClass("centered_cell")}},null,{aDataSort:[2,3]},{aDataSort:[3,2]},null],fnDrawCallback:function(){$('input[name="selectallcb"]').attr("checked",!1)}}),"0"==$('input[name="sametiiaccounts"]').val()&&$('input[name="sametiiaccounts"]').closest("form").find('input[name="submitbutton"]').addClass("disabled"),$("#migrationTable").dataTable({bDestroy:!0,bProcessing:!0,bServerSide:!0,oLanguage:dataTablesLang,aaSorting:[[2,"asc"]],aLengthMenu:[[10,25,50,100,-1],[10,25,50,100,"All"]],sAjaxSource:"ajax.php?action=get_assignments",aoColumns:[{bSortable:!1,fnCreatedCell:function(e,a,t,s,i){$(e).addClass("centered_cell")}},{bSortable:!0,sClass:"centered_cell"},null,{bSortable:!0,sClass:"centered_cell"}],aoColumnDefs:[{bSearchable:!1},{bSearchable:!1},{bSearchable:!0},{bSearchable:!1}],fnDrawCallback:function(){$('input[name="selectallcb"]').attr("checked",!1)}}),$("#filesTable").dataTable({bDestroy:!0,bProcessing:!0,bServerSide:!0,oLanguage:dataTablesLang,sAjaxSource:"ajax.php?action=get_files",aoColumns:[null,null,null,{sClass:"filename c0",sWidth:"40%"},null,{sClass:"fullname c1",sWidth:"35%"},null,{sClass:"created c2",sWidth:"22%"},{sClass:"remove c3",sWidth:"3%"}],aoColumnDefs:[{bSearchable:!0,bVisible:!1,aTargets:[0]},{bSearchable:!0,bVisible:!1,aTargets:[1]},{bSearchable:!0,bVisible:!1,aTargets:[2]},{bSearchable:!0,bVisible:!0,aTargets:[3]},{bSearchable:!0,bVisible:!1,aTargets:[4]},{bSearchable:!0,bVisible:!0,aTargets:[5]},{bSearchable:!0,bVisible:!1,aTargets:[6]},{bSearchable:!0,bVisible:!0,aTargets:[7]},{bSearchable:!0,bVisible:!0,aTargets:[8]}],fnDrawCallback:function(e){if(0!=e.aiDisplay.length)for(var a=$("#filesTable tbody tr"),t=a[0].getElementsByTagName("td").length,s="",i=0;i<a.length;i++){var n=(e._iDisplayStart+i,e.aoData[e.aiDisplay[i]]._aData[0]);if(n!=s){var r=document.createElement("tr"),o=document.createElement("td");o.colSpan=t,o.className="group",o.innerHTML=n,r.appendChild(o),a[i].parentNode.insertBefore(r,a[i]),s=n}}},aaSortingFixed:[[0,"asc"]],aaSorting:[[1,"asc"]],sDom:'lfr<"giveHeight"t>ip'}),$.datepicker.regional[""].dateFormat="d M yy",$.datepicker.setDefaults($.datepicker.regional[""]);var courseBrowserTable=$("#courseBrowserTable").dataTable({bProcessing:!0,oLanguage:dataTablesLang,aaSorting:[[6,"asc"]],sAjaxSource:"ajax.php",aoColumnDefs:[{bSearchable:!1,bSortable:!1,sWidth:"5%",bVisible:!0,aTargets:[0],fnCreatedCell:function(e){$(e).addClass("center")}},{bSearchable:!0,bVisible:!0,sWidth:"45%",iDataSort:6,aTargets:[1]},{bSearchable:!0,bVisible:!0,sWidth:"10%",aTargets:[2]},{bSearchable:!0,bVisible:!0,sWidth:"20%",iDataSort:7,aTargets:[3],fnCreatedCell:function(e){$(e).addClass("right")}},{bSearchable:!1,bVisible:!0,sWidth:"10%",aTargets:[4],fnCreatedCell:function(e){$(e).addClass("right")}},{bSearchable:!0,bVisible:!0,sWidth:"10%",aTargets:[5],fnCreatedCell:function(e){$(e).addClass("center")}},{bSearchable:!0,bVisible:!1,aTargets:[6]},{bSearchable:!0,bVisible:!1,aTargets:[7]}],fnServerData:function(e,a,t){$.ajax({dataType:"json",type:"POST",url:e,data:{action:"search_classes",course_title:$("#search_course_title").val(),course_integration:$("#search_course_integration").val(),course_end_date:$("#search_course_end_date").val(),sesskey:M.cfg.sesskey},success:function(e){t(e)}})},bStateSave:!0,fnStateSave:function(e,a){try{localStorage.setItem(uid+"DataTables",JSON.stringify(a))}catch(t){}},fnStateLoad:function(e){try{return JSON.parse(localStorage.getItem(uid+"DataTables"))}catch(a){}},fnDrawCallback:function(){$('input[name="selectallcb"]').attr("checked",!1),initialiseCourseRecreation(),initialiseEditEndDate(),$("#search_courses_button").removeAttr("disabled")}});$("#search_courses_button").click(function(){return $(this).attr("disabled","disabled"),courseBrowserTable.fnReloadAjax(),courseBrowserTable.fnStandingRedraw(),!1}),$("#search_course_end_date").datepicker();var oTable=$("#assignmentBrowserTable").dataTable({bProcessing:!0,oLanguage:dataTablesLang,sAjaxSource:"ajax.php",fnServerData:function(sSource,aoData,fnCallback){$("#id_create_course").attr("disabled","disabled"),$("#id_update_course").attr("disabled","disabled"),$("#assignmentBrowserTable").length>0&&$(".side-pre-only #page-content #region-main").css({"margin-left":"0px"}),$("#id_assignmentname").attr("disabled","disabled"),$("#id_create_assignment").attr("disabled","disabled"),$.ajax({dataType:"json",type:"POST",url:sSource,data:{action:"get_assignments",tii_course_id:$("#tii_course_id").html(),sesskey:M.cfg.sesskey},success:function(result){eval(result),initialiseCourseBrowserButtons(oTable),fnCallback(result),"0"!=$("#course_id").html()&&result.number_of_assignments>0?($("#id_assignmentname").removeAttr("disabled"),$("#id_create_assignment").removeAttr("disabled"),$(".assignmentids_check").removeAttr("disabled"),initialiseCreateAssignmentButton(oTable)):($("#id_assignmentname").attr("disabled","disabled"),$("#id_create_assignment").attr("disabled","disabled"),$(".assignmentids_check").attr("disabled","disabled")),$("#id_create_course").removeAttr("disabled"),$("#id_update_course").removeAttr("disabled")}})},aoColumnDefs:[{bSearchable:!1,bVisible:!0,aTargets:[0]},{bSearchable:!0,bVisible:!0,aTargets:[1],fnCreatedCell:function(e){$(e).addClass("nowrap")}},{bSearchable:!0,bVisible:!0,aTargets:[2]},{bSearchable:!0,bVisible:!0,aTargets:[3]}]});if($("#create_classes_button").colorbox({iframe:!0,width:"60%",top:"200px",height:"124px",opacity:"0.7",className:"course_creation",href:function(){var e=$(".create_course_category").val(),a=$(".create_assignment_checkbox").is(":checked")?"1":"0",t="";$(".browser_checkbox:checked").each(function(e){t+="&class_id"+e+"="+$(this).val(),e++});var s=window.location.href,i=s.replace("cmd=courses","cmd=multiple_class_recreation");return i+"&view_context=box&category="+e+"&assignments="+a+t+"&sesskey="+M.cfg.sesskey},onCleanup:function(){window.location=window.location}}),$("#class_ids").length>0){$(".side-pre-only #page-content #region-main").css({"margin-left":"0px"}),$(".has-region-side-pre #page-content #region-main").css({width:"100%","margin-top":"-30px"});var class_ids=$("#class_ids").html();$.ajax({dataType:"html",type:"POST",url:"ajax.php",data:{action:"create_courses",class_ids:class_ids,course_category:$("#course_category").html(),create_assignments:$("#create_assignments").html(),sesskey:M.cfg.sesskey},success:function(e){$("#course_creation_status").html(e)}})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
