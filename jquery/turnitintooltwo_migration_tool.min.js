function displayMigrationModal(){$("#migrate_type").data("turnitintoolid")!=$("#migrate_type").data("lastasked")&&($.colorbox({width:550,height:600,inline:!0,opacity:"0.7",href:"#migration_alert",onLoad:function(){$("#asktomigrate").show(),lightBoxCloseButton()},onCleanup:function(){$("#tii_close_bar").remove(),$("#migration_alert").hide()}}),$("#migration_alert").show()),2==$("#migrate_type").data("migratetype")&&($("#asktomigrate").hide(),$("#migrating").show(),migrate($("#migrate_type").data("courseid"),$("#migrate_type").data("turnitintoolid")))}function migrate(t,o){$.ajax({dataType:"json",type:"POST",url:M.cfg.wwwroot+"/mod/turnitintooltwo/ajax.php",data:{action:"begin_migration",courseid:t,turnitintoolid:o,sesskey:M.cfg.sesskey},success:function(t){$.colorbox&&$.colorbox.close(),$("#migration_alert").hide(),window.location.href=M.cfg.wwwroot+"/mod/turnitintooltwo/view.php?id="+t.id},error:function(t){var o=t.responseJSON;$.colorbox&&$.colorbox.close(),$("#migration_alert").hide(),$("#turnitintool_style").prepend('<div id="full-error" class="box generalbox noticebox">'+o.error+" "+o.message+"</div>"),o.hasOwnProperty("trace")&&(console.error(o.message),console.error(JSON.stringify(o.trace,null,4)))}})}function lightBoxCloseButton(){$("body").append('<div id="tii_close_bar"><a href="#" onclick="$.colorbox.close(); return false;">'+M.str.turnitintooltwo.closebutton+"</a></div>")}$(document).ready(function(){$.ajax({dataType:"json",type:"POST",url:M.cfg.wwwroot+"/mod/turnitintooltwo/ajax.php",data:{action:"check_migrated",turnitintoolid:$("#migrate_type").data("turnitintoolid"),sesskey:M.cfg.sesskey},success:function(t){t.migrated===!0?window.location.href=M.cfg.wwwroot+"/mod/turnitintooltwo/view.php?id="+t.v2id+"&migrated=1":displayMigrationModal()}})}),$(".migrate_link").click(function(){$("#asktomigrate").hide(),$("#migrating").show(),migrate($(this).data("courseid"),$(this).data("turnitintoolid"))}),$(".dontmigrate_link").click(function(){$.colorbox.close(),$("#migration_alert").hide()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR1cm5pdGludG9vbHR3b19taWdyYXRpb25fdG9vbC5qcyJdLCJuYW1lcyI6WyJkaXNwbGF5TWlncmF0aW9uTW9kYWwiLCIkIiwiZGF0YSIsImNvbG9yYm94Iiwid2lkdGgiLCJoZWlnaHQiLCJpbmxpbmUiLCJvcGFjaXR5IiwiaHJlZiIsIm9uTG9hZCIsInNob3ciLCJsaWdodEJveENsb3NlQnV0dG9uIiwib25DbGVhbnVwIiwicmVtb3ZlIiwiaGlkZSIsIm1pZ3JhdGUiLCJjb3Vyc2VpZCIsInR1cm5pdGludG9vbGlkIiwiYWpheCIsImRhdGFUeXBlIiwidHlwZSIsInVybCIsIk0iLCJjZmciLCJ3d3dyb290IiwiYWN0aW9uIiwic2Vzc2tleSIsInN1Y2Nlc3MiLCJjbG9zZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaWQiLCJlcnJvciIsInJlc3BvbnNlSlNPTiIsInByZXBlbmQiLCJtZXNzYWdlIiwiaGFzT3duUHJvcGVydHkiLCJjb25zb2xlIiwiSlNPTiIsInN0cmluZ2lmeSIsInRyYWNlIiwiYXBwZW5kIiwic3RyIiwidHVybml0aW50b29sdHdvIiwiY2xvc2VidXR0b24iLCJkb2N1bWVudCIsInJlYWR5IiwibWlncmF0ZWQiLCJ2MmlkIiwiY2xpY2siLCJ0aGlzIl0sIm1hcHBpbmdzIjoiQUFpQ0EsUUFBU0EseUJBRURDLEVBQUUsaUJBQWlCQyxLQUFLLG1CQUFxQkQsRUFBRSxpQkFBaUJDLEtBQUssZUFDckVELEVBQUVFLFVBQVVDLE1BQU8sSUFBS0MsT0FBUSxJQUFLQyxRQUFPLEVBQU1DLFFBQVMsTUFBT0MsS0FBSyxtQkFDbkVDLE9BQVEsV0FDSlIsRUFBRSxpQkFBaUJTLE9BQ25CQyx1QkFFSkMsVUFBVSxXQUNOWCxFQUFFLGtCQUFrQlksU0FDcEJaLEVBQUUsb0JBQW9CYSxVQUc5QmIsRUFBRSxvQkFBb0JTLFFBR29CLEdBQTFDVCxFQUFFLGlCQUFpQkMsS0FBSyxpQkFDeEJELEVBQUUsaUJBQWlCYSxPQUNuQmIsRUFBRSxjQUFjUyxPQUVoQkssUUFBUWQsRUFBRSxpQkFBaUJDLEtBQUssWUFBYUQsRUFBRSxpQkFBaUJDLEtBQUssb0JBSTdFLFFBQVNhLFNBQVFDLEVBQVVDLEdBQ3ZCaEIsRUFBRWlCLE1BQ0VDLFNBQVksT0FDWkMsS0FBUSxPQUNSQyxJQUFLQyxFQUFFQyxJQUFJQyxRQUFVLGdDQUNyQnRCLE1BQVN1QixPQUFRLGtCQUFtQlQsU0FBVUEsRUFBVUMsZUFBZ0JBLEVBQWdCUyxRQUFTSixFQUFFQyxJQUFJRyxTQUN2R0MsUUFBUyxTQUFTekIsR0FDVkQsRUFBRUUsVUFDRkYsRUFBRUUsU0FBU3lCLFFBRWYzQixFQUFFLG9CQUFvQmEsT0FDdEJlLE9BQU9DLFNBQVN0QixLQUFPYyxFQUFFQyxJQUFJQyxRQUFVLG9DQUFvQ3RCLEVBQUs2QixJQUVwRkMsTUFBTyxTQUFTQSxHQUNaLEdBQUk5QixHQUFPOEIsRUFBTUMsWUFDYmhDLEdBQUVFLFVBQ0ZGLEVBQUVFLFNBQVN5QixRQUVmM0IsRUFBRSxvQkFBb0JhLE9BQ3RCYixFQUFFLHVCQUNHaUMsUUFBUSx5REFBMkRoQyxFQUFLOEIsTUFBUSxJQUFNOUIsRUFBS2lDLFFBQVUsVUFHdEdqQyxFQUFLa0MsZUFBZSxXQUNwQkMsUUFBUUwsTUFBTTlCLEVBQUtpQyxTQUNuQkUsUUFBUUwsTUFBTU0sS0FBS0MsVUFBVXJDLEVBQUtzQyxNQUFPLEtBQU0sUUFNL0QsUUFBUzdCLHVCQUNMVixFQUFFLFFBQVF3QyxPQUFPLG1GQUFxRm5CLEVBQUVvQixJQUFJQyxnQkFBZ0JDLFlBQWMsY0F6RjlJM0MsRUFBRTRDLFVBQVVDLE1BQU0sV0FHZDdDLEVBQUVpQixNQUNFQyxTQUFZLE9BQ1pDLEtBQVEsT0FDUkMsSUFBT0MsRUFBRUMsSUFBSUMsUUFBVSxnQ0FDdkJ0QixNQUNJdUIsT0FBUSxpQkFDUlIsZUFBZ0JoQixFQUFFLGlCQUFpQkMsS0FBSyxrQkFDeEN3QixRQUFTSixFQUFFQyxJQUFJRyxTQUVuQkMsUUFBVyxTQUFTekIsR0FDWkEsRUFBSzZDLFlBQWEsRUFDbEJsQixPQUFPQyxTQUFTdEIsS0FBT2MsRUFBRUMsSUFBSUMsUUFBVSxvQ0FBb0N0QixFQUFLOEMsS0FBSyxjQUVyRmhELDZCQU1oQkMsRUFBRSxpQkFBaUJnRCxNQUFNLFdBQ3JCaEQsRUFBRSxpQkFBaUJhLE9BQ25CYixFQUFFLGNBQWNTLE9BQ2hCSyxRQUFRZCxFQUFFaUQsTUFBTWhELEtBQUssWUFBYUQsRUFBRWlELE1BQU1oRCxLQUFLLHFCQUduREQsRUFBRSxxQkFBcUJnRCxNQUFNLFdBQ3pCaEQsRUFBRUUsU0FBU3lCLFFBQ1gzQixFQUFFLG9CQUFvQmEiLCJmaWxlIjoidHVybml0aW50b29sdHdvX21pZ3JhdGlvbl90b29sLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XG5cbiAgICAvLyBDaGVjayB3aGV0aGVyIHRoaXMgYXNzaWdubWVudCBoYXMgYmVlbiBtaWdyYXRlZCBpbiB0aGlzIHNlc3Npb24gYW5kIHJlZGlyZWN0IGlmIHNvLlxuICAgICQuYWpheCh7XG4gICAgICAgIFwiZGF0YVR5cGVcIjogJ2pzb24nLFxuICAgICAgICBcInR5cGVcIjogXCJQT1NUXCIsXG4gICAgICAgIFwidXJsXCI6IE0uY2ZnLnd3d3Jvb3QgKyBcIi9tb2QvdHVybml0aW50b29sdHdvL2FqYXgucGhwXCIsXG4gICAgICAgIFwiZGF0YVwiOiB7XG4gICAgICAgICAgICBhY3Rpb246IFwiY2hlY2tfbWlncmF0ZWRcIiwgXG4gICAgICAgICAgICB0dXJuaXRpbnRvb2xpZDogJChcIiNtaWdyYXRlX3R5cGVcIikuZGF0YShcInR1cm5pdGludG9vbGlkXCIpLFxuICAgICAgICAgICAgc2Vzc2tleTogTS5jZmcuc2Vzc2tleVxuICAgICAgICB9LFxuICAgICAgICBcInN1Y2Nlc3NcIjogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgaWYgKGRhdGEubWlncmF0ZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IE0uY2ZnLnd3d3Jvb3QgKyBcIi9tb2QvdHVybml0aW50b29sdHdvL3ZpZXcucGhwP2lkPVwiK2RhdGEudjJpZCtcIiZtaWdyYXRlZD0xXCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGRpc3BsYXlNaWdyYXRpb25Nb2RhbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxuJCgnLm1pZ3JhdGVfbGluaycpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICQoJyNhc2t0b21pZ3JhdGUnKS5oaWRlKCk7XG4gICAgJCgnI21pZ3JhdGluZycpLnNob3coKTtcbiAgICBtaWdyYXRlKCQodGhpcykuZGF0YShcImNvdXJzZWlkXCIpLCAkKHRoaXMpLmRhdGEoXCJ0dXJuaXRpbnRvb2xpZFwiKSk7XG59KTtcblxuJCgnLmRvbnRtaWdyYXRlX2xpbmsnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgJC5jb2xvcmJveC5jbG9zZSgpO1xuICAgICQoJyNtaWdyYXRpb25fYWxlcnQnKS5oaWRlKCk7XG59KTtcblxuZnVuY3Rpb24gZGlzcGxheU1pZ3JhdGlvbk1vZGFsKCkge1xuICAgIC8vIE9ubHkgZGlzcGxheSB0aGUgbW9kYWwgZHVyaW5nIGEgbWFudWFsIG1pZ3JhdGlvbi5cbiAgICBpZiAoJChcIiNtaWdyYXRlX3R5cGVcIikuZGF0YShcInR1cm5pdGludG9vbGlkXCIpICE9ICQoXCIjbWlncmF0ZV90eXBlXCIpLmRhdGEoXCJsYXN0YXNrZWRcIikpIHtcbiAgICAgICAgJC5jb2xvcmJveCh7d2lkdGg6IDU1MCwgaGVpZ2h0OiA2MDAsIGlubGluZTp0cnVlLCBvcGFjaXR5OiBcIjAuN1wiLCBocmVmOlwiI21pZ3JhdGlvbl9hbGVydFwiLFxuICAgICAgICAgICAgb25Mb2FkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAkKCcjYXNrdG9taWdyYXRlJykuc2hvdygpO1xuICAgICAgICAgICAgICAgIGxpZ2h0Qm94Q2xvc2VCdXR0b24oKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvbkNsZWFudXA6ZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJCgnI3RpaV9jbG9zZV9iYXInKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAkKCcjbWlncmF0aW9uX2FsZXJ0JykuaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgJCgnI21pZ3JhdGlvbl9hbGVydCcpLnNob3coKTtcbiAgICB9XG5cbiAgICBpZiAoJChcIiNtaWdyYXRlX3R5cGVcIikuZGF0YShcIm1pZ3JhdGV0eXBlXCIpID09IDIpIHtcbiAgICAgICAgJCgnI2Fza3RvbWlncmF0ZScpLmhpZGUoKTtcbiAgICAgICAgJCgnI21pZ3JhdGluZycpLnNob3coKTtcblxuICAgICAgICBtaWdyYXRlKCQoXCIjbWlncmF0ZV90eXBlXCIpLmRhdGEoXCJjb3Vyc2VpZFwiKSwgJChcIiNtaWdyYXRlX3R5cGVcIikuZGF0YShcInR1cm5pdGludG9vbGlkXCIpKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIG1pZ3JhdGUoY291cnNlaWQsIHR1cm5pdGludG9vbGlkKSB7XG4gICAgJC5hamF4KHtcbiAgICAgICAgXCJkYXRhVHlwZVwiOiAnanNvbicsXG4gICAgICAgIFwidHlwZVwiOiBcIlBPU1RcIixcbiAgICAgICAgdXJsOiBNLmNmZy53d3dyb290ICsgXCIvbW9kL3R1cm5pdGludG9vbHR3by9hamF4LnBocFwiLFxuICAgICAgICBcImRhdGFcIjoge2FjdGlvbjogXCJiZWdpbl9taWdyYXRpb25cIiwgY291cnNlaWQ6IGNvdXJzZWlkLCB0dXJuaXRpbnRvb2xpZDogdHVybml0aW50b29saWQsIHNlc3NrZXk6IE0uY2ZnLnNlc3NrZXl9LFxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBpZiAoJC5jb2xvcmJveCkge1xuICAgICAgICAgICAgICAgICQuY29sb3Jib3guY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICQoJyNtaWdyYXRpb25fYWxlcnQnKS5oaWRlKCk7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IE0uY2ZnLnd3d3Jvb3QgKyBcIi9tb2QvdHVybml0aW50b29sdHdvL3ZpZXcucGhwP2lkPVwiK2RhdGEuaWQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSBlcnJvci5yZXNwb25zZUpTT047XG4gICAgICAgICAgICBpZiAoJC5jb2xvcmJveCkge1xuICAgICAgICAgICAgICAgICQuY29sb3Jib3guY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICQoJyNtaWdyYXRpb25fYWxlcnQnKS5oaWRlKCk7XG4gICAgICAgICAgICAkKCcjdHVybml0aW50b29sX3N0eWxlJylcbiAgICAgICAgICAgICAgICAucHJlcGVuZCgnPGRpdiBpZD1cImZ1bGwtZXJyb3JcIiBjbGFzcz1cImJveCBnZW5lcmFsYm94IG5vdGljZWJveFwiPicgKyBkYXRhLmVycm9yICsgJyAnICsgZGF0YS5tZXNzYWdlICsgJzwvZGl2PicpO1xuXG4gICAgICAgICAgICAvLyBDaGVjayBpZiB3ZSBoYXZlIGEgc3RhY2sgdHJhY2UgaW5jbHVkZWQuXG4gICAgICAgICAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eSgndHJhY2UnKSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZGF0YS5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKEpTT04uc3RyaW5naWZ5KGRhdGEudHJhY2UsIG51bGwsIDQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBsaWdodEJveENsb3NlQnV0dG9uKCkge1xuICAgICQoJ2JvZHknKS5hcHBlbmQoJzxkaXYgaWQ9XCJ0aWlfY2xvc2VfYmFyXCI+PGEgaHJlZj1cIiNcIiBvbmNsaWNrPVwiJC5jb2xvcmJveC5jbG9zZSgpOyByZXR1cm4gZmFsc2U7XCI+JyArIE0uc3RyLnR1cm5pdGludG9vbHR3by5jbG9zZWJ1dHRvbiArICc8L2E+PC9kaXY+Jyk7XG59XG4iXX0=
