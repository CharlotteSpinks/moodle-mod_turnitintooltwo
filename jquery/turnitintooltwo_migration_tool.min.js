function displayMigrationModal(){$("#migrate_type").data("turnitintoolid")!=$("#migrate_type").data("lastasked")&&($.colorbox({width:550,height:600,inline:!0,opacity:"0.7",href:"#migration_alert",onLoad:function(){$("#asktomigrate").show(),lightBoxCloseButton()},onCleanup:function(){$("#tii_close_bar").remove(),$("#migration_alert").hide()}}),$("#migration_alert").show()),2==$("#migrate_type").data("migratetype")&&($("#asktomigrate").hide(),$("#migrating").show(),migrate($("#migrate_type").data("courseid"),$("#migrate_type").data("turnitintoolid")))}function migrate(t,o){$.ajax({dataType:"json",type:"POST",url:M.cfg.wwwroot+"/mod/turnitintooltwo/ajax.php",data:{action:"begin_migration",courseid:t,turnitintoolid:o,sesskey:M.cfg.sesskey},success:function(t){$.colorbox&&$.colorbox.close(),$("#migration_alert").hide(),window.location.href=M.cfg.wwwroot+"/mod/turnitintooltwo/view.php?id="+t.id},error:function(t){var o=t.responseJSON;$.colorbox&&$.colorbox.close(),$("#migration_alert").hide(),$("#turnitintool_style").prepend('<div id="full-error" class="box generalbox noticebox">'+o.error+" "+o.message+"</div>"),o.trace.length>0&&(console.error(o.message),console.error(JSON.stringify(o.trace,null,4)))}})}function lightBoxCloseButton(){$("body").append('<div id="tii_close_bar"><a href="#" onclick="$.colorbox.close(); return false;">'+M.str.turnitintooltwo.closebutton+"</a></div>")}$(document).ready(function(){$.ajax({dataType:"json",type:"POST",url:M.cfg.wwwroot+"/mod/turnitintooltwo/ajax.php",data:{action:"check_migrated",turnitintoolid:$("#migrate_type").data("turnitintoolid"),sesskey:M.cfg.sesskey},success:function(t){1==t.migrated?window.location.href=M.cfg.wwwroot+"/mod/turnitintooltwo/view.php?id="+t.v2id:displayMigrationModal()}})}),$(".migrate_link").click(function(){$("#asktomigrate").hide(),$("#migrating").show(),migrate($(this).data("courseid"),$(this).data("turnitintoolid"))}),$(".dontmigrate_link").click(function(){$.colorbox.close(),$("#migration_alert").hide()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR1cm5pdGludG9vbHR3b19taWdyYXRpb25fdG9vbC5qcyJdLCJuYW1lcyI6WyJkaXNwbGF5TWlncmF0aW9uTW9kYWwiLCIkIiwiZGF0YSIsImNvbG9yYm94Iiwid2lkdGgiLCJoZWlnaHQiLCJpbmxpbmUiLCJvcGFjaXR5IiwiaHJlZiIsIm9uTG9hZCIsInNob3ciLCJsaWdodEJveENsb3NlQnV0dG9uIiwib25DbGVhbnVwIiwicmVtb3ZlIiwiaGlkZSIsIm1pZ3JhdGUiLCJjb3Vyc2VpZCIsInR1cm5pdGludG9vbGlkIiwiYWpheCIsImRhdGFUeXBlIiwidHlwZSIsInVybCIsIk0iLCJjZmciLCJ3d3dyb290IiwiYWN0aW9uIiwic2Vzc2tleSIsInN1Y2Nlc3MiLCJjbG9zZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaWQiLCJlcnJvciIsInJlc3BvbnNlSlNPTiIsInByZXBlbmQiLCJtZXNzYWdlIiwidHJhY2UiLCJsZW5ndGgiLCJjb25zb2xlIiwiSlNPTiIsInN0cmluZ2lmeSIsImFwcGVuZCIsInN0ciIsInR1cm5pdGludG9vbHR3byIsImNsb3NlYnV0dG9uIiwiZG9jdW1lbnQiLCJyZWFkeSIsIm1pZ3JhdGVkIiwidjJpZCIsImNsaWNrIiwidGhpcyJdLCJtYXBwaW5ncyI6IkFBaUNBLFFBQVNBLHlCQUVEQyxFQUFFLGlCQUFpQkMsS0FBSyxtQkFBcUJELEVBQUUsaUJBQWlCQyxLQUFLLGVBQ3JFRCxFQUFFRSxVQUFVQyxNQUFPLElBQUtDLE9BQVEsSUFBS0MsUUFBTyxFQUFNQyxRQUFTLE1BQU9DLEtBQUssbUJBQ3ZFQyxPQUFRLFdBQ0pSLEVBQUUsaUJBQWlCUyxPQUNuQkMsdUJBRUpDLFVBQVUsV0FDTlgsRUFBRSxrQkFBa0JZLFNBQ3BCWixFQUFFLG9CQUFvQmEsVUFFMUJiLEVBQUUsb0JBQW9CUyxRQUdvQixHQUExQ1QsRUFBRSxpQkFBaUJDLEtBQUssaUJBQ3hCRCxFQUFFLGlCQUFpQmEsT0FDbkJiLEVBQUUsY0FBY1MsT0FFaEJLLFFBQVFkLEVBQUUsaUJBQWlCQyxLQUFLLFlBQWFELEVBQUUsaUJBQWlCQyxLQUFLLG9CQUk3RSxRQUFTYSxTQUFRQyxFQUFVQyxHQUN2QmhCLEVBQUVpQixNQUNFQyxTQUFZLE9BQ1pDLEtBQVEsT0FDUkMsSUFBS0MsRUFBRUMsSUFBSUMsUUFBVSxnQ0FDckJ0QixNQUFTdUIsT0FBUSxrQkFBbUJULFNBQVVBLEVBQVVDLGVBQWdCQSxFQUFnQlMsUUFBU0osRUFBRUMsSUFBSUcsU0FDdkdDLFFBQVMsU0FBU3pCLEdBQ1ZELEVBQUVFLFVBQ0ZGLEVBQUVFLFNBQVN5QixRQUVmM0IsRUFBRSxvQkFBb0JhLE9BQ3RCZSxPQUFPQyxTQUFTdEIsS0FBT2MsRUFBRUMsSUFBSUMsUUFBVSxvQ0FBb0N0QixFQUFLNkIsSUFFcEZDLE1BQU8sU0FBU0EsR0FDWixHQUFJOUIsR0FBTzhCLEVBQU1DLFlBQ2JoQyxHQUFFRSxVQUNGRixFQUFFRSxTQUFTeUIsUUFFZjNCLEVBQUUsb0JBQW9CYSxPQUN0QmIsRUFBRSx1QkFDR2lDLFFBQVEseURBQTJEaEMsRUFBSzhCLE1BQVEsSUFBTTlCLEVBQUtpQyxRQUFVLFVBR3RHakMsRUFBS2tDLE1BQU1DLE9BQVMsSUFDcEJDLFFBQVFOLE1BQU05QixFQUFLaUMsU0FDbkJHLFFBQVFOLE1BQU1PLEtBQUtDLFVBQVV0QyxFQUFLa0MsTUFBTyxLQUFNLFFBTS9ELFFBQVN6Qix1QkFDTFYsRUFBRSxRQUFRd0MsT0FBTyxtRkFBcUZuQixFQUFFb0IsSUFBSUMsZ0JBQWdCQyxZQUFjLGNBeEY5STNDLEVBQUU0QyxVQUFVQyxNQUFNLFdBR2Q3QyxFQUFFaUIsTUFDRUMsU0FBWSxPQUNaQyxLQUFRLE9BQ1JDLElBQU9DLEVBQUVDLElBQUlDLFFBQVUsZ0NBQ3ZCdEIsTUFDSXVCLE9BQVEsaUJBQ1JSLGVBQWdCaEIsRUFBRSxpQkFBaUJDLEtBQUssa0JBQ3hDd0IsUUFBU0osRUFBRUMsSUFBSUcsU0FFbkJDLFFBQVcsU0FBU3pCLEdBQ0ssR0FBakJBLEVBQUs2QyxTQUNMbEIsT0FBT0MsU0FBU3RCLEtBQU9jLEVBQUVDLElBQUlDLFFBQVUsb0NBQW9DdEIsRUFBSzhDLEtBRWhGaEQsNkJBTWhCQyxFQUFFLGlCQUFpQmdELE1BQU0sV0FDckJoRCxFQUFFLGlCQUFpQmEsT0FDbkJiLEVBQUUsY0FBY1MsT0FDaEJLLFFBQVFkLEVBQUVpRCxNQUFNaEQsS0FBSyxZQUFhRCxFQUFFaUQsTUFBTWhELEtBQUsscUJBR25ERCxFQUFFLHFCQUFxQmdELE1BQU0sV0FDekJoRCxFQUFFRSxTQUFTeUIsUUFDWDNCLEVBQUUsb0JBQW9CYSIsImZpbGUiOiJ0dXJuaXRpbnRvb2x0d29fbWlncmF0aW9uX3Rvb2wubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXtcblxuICAgIC8vIENoZWNrIHdoZXRoZXIgdGhpcyBhc3NpZ25tZW50IGhhcyBiZWVuIG1pZ3JhdGVkIGluIHRoaXMgc2Vzc2lvbiBhbmQgcmVkaXJlY3QgaWYgc28uXG4gICAgJC5hamF4KHtcbiAgICAgICAgXCJkYXRhVHlwZVwiOiAnanNvbicsXG4gICAgICAgIFwidHlwZVwiOiBcIlBPU1RcIixcbiAgICAgICAgXCJ1cmxcIjogTS5jZmcud3d3cm9vdCArIFwiL21vZC90dXJuaXRpbnRvb2x0d28vYWpheC5waHBcIixcbiAgICAgICAgXCJkYXRhXCI6IHtcbiAgICAgICAgICAgIGFjdGlvbjogXCJjaGVja19taWdyYXRlZFwiLCBcbiAgICAgICAgICAgIHR1cm5pdGludG9vbGlkOiAkKFwiI21pZ3JhdGVfdHlwZVwiKS5kYXRhKFwidHVybml0aW50b29saWRcIiksXG4gICAgICAgICAgICBzZXNza2V5OiBNLmNmZy5zZXNza2V5XG4gICAgICAgIH0sXG4gICAgICAgIFwic3VjY2Vzc1wiOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBpZiAoZGF0YS5taWdyYXRlZCA9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBNLmNmZy53d3dyb290ICsgXCIvbW9kL3R1cm5pdGludG9vbHR3by92aWV3LnBocD9pZD1cIitkYXRhLnYyaWQ7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGRpc3BsYXlNaWdyYXRpb25Nb2RhbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxuJCgnLm1pZ3JhdGVfbGluaycpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICQoJyNhc2t0b21pZ3JhdGUnKS5oaWRlKCk7XG4gICAgJCgnI21pZ3JhdGluZycpLnNob3coKTtcbiAgICBtaWdyYXRlKCQodGhpcykuZGF0YShcImNvdXJzZWlkXCIpLCAkKHRoaXMpLmRhdGEoXCJ0dXJuaXRpbnRvb2xpZFwiKSk7XG59KTtcblxuJCgnLmRvbnRtaWdyYXRlX2xpbmsnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgJC5jb2xvcmJveC5jbG9zZSgpO1xuICAgICQoJyNtaWdyYXRpb25fYWxlcnQnKS5oaWRlKCk7XG59KTtcblxuZnVuY3Rpb24gZGlzcGxheU1pZ3JhdGlvbk1vZGFsKCkge1xuICAgIC8vIE9ubHkgZGlzcGxheSB0aGUgbW9kYWwgZHVyaW5nIGEgbWFudWFsIG1pZ3JhdGlvbi5cbiAgICBpZiAoJChcIiNtaWdyYXRlX3R5cGVcIikuZGF0YShcInR1cm5pdGludG9vbGlkXCIpICE9ICQoXCIjbWlncmF0ZV90eXBlXCIpLmRhdGEoXCJsYXN0YXNrZWRcIikpIHtcbiAgICAgICAgJC5jb2xvcmJveCh7d2lkdGg6IDU1MCwgaGVpZ2h0OiA2MDAsIGlubGluZTp0cnVlLCBvcGFjaXR5OiBcIjAuN1wiLCBocmVmOlwiI21pZ3JhdGlvbl9hbGVydFwiLFxuICAgICAgICBvbkxvYWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJCgnI2Fza3RvbWlncmF0ZScpLnNob3coKTtcbiAgICAgICAgICAgIGxpZ2h0Qm94Q2xvc2VCdXR0b24oKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25DbGVhbnVwOmZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJCgnI3RpaV9jbG9zZV9iYXInKS5yZW1vdmUoKTtcbiAgICAgICAgICAgICQoJyNtaWdyYXRpb25fYWxlcnQnKS5oaWRlKCk7XG4gICAgICAgIH19KTtcbiAgICAgICAgJCgnI21pZ3JhdGlvbl9hbGVydCcpLnNob3coKTtcbiAgICB9XG5cbiAgICBpZiAoJChcIiNtaWdyYXRlX3R5cGVcIikuZGF0YShcIm1pZ3JhdGV0eXBlXCIpID09IDIpIHtcbiAgICAgICAgJCgnI2Fza3RvbWlncmF0ZScpLmhpZGUoKTtcbiAgICAgICAgJCgnI21pZ3JhdGluZycpLnNob3coKTtcblxuICAgICAgICBtaWdyYXRlKCQoXCIjbWlncmF0ZV90eXBlXCIpLmRhdGEoXCJjb3Vyc2VpZFwiKSwgJChcIiNtaWdyYXRlX3R5cGVcIikuZGF0YShcInR1cm5pdGludG9vbGlkXCIpKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIG1pZ3JhdGUoY291cnNlaWQsIHR1cm5pdGludG9vbGlkKSB7XG4gICAgJC5hamF4KHtcbiAgICAgICAgXCJkYXRhVHlwZVwiOiAnanNvbicsXG4gICAgICAgIFwidHlwZVwiOiBcIlBPU1RcIixcbiAgICAgICAgdXJsOiBNLmNmZy53d3dyb290ICsgXCIvbW9kL3R1cm5pdGludG9vbHR3by9hamF4LnBocFwiLFxuICAgICAgICBcImRhdGFcIjoge2FjdGlvbjogXCJiZWdpbl9taWdyYXRpb25cIiwgY291cnNlaWQ6IGNvdXJzZWlkLCB0dXJuaXRpbnRvb2xpZDogdHVybml0aW50b29saWQsIHNlc3NrZXk6IE0uY2ZnLnNlc3NrZXl9LFxuICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBpZiAoJC5jb2xvcmJveCkge1xuICAgICAgICAgICAgICAgICQuY29sb3Jib3guY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICQoJyNtaWdyYXRpb25fYWxlcnQnKS5oaWRlKCk7XG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IE0uY2ZnLnd3d3Jvb3QgKyBcIi9tb2QvdHVybml0aW50b29sdHdvL3ZpZXcucGhwP2lkPVwiK2RhdGEuaWQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSBlcnJvci5yZXNwb25zZUpTT047XG4gICAgICAgICAgICBpZiAoJC5jb2xvcmJveCkge1xuICAgICAgICAgICAgICAgICQuY29sb3Jib3guY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICQoJyNtaWdyYXRpb25fYWxlcnQnKS5oaWRlKCk7XG4gICAgICAgICAgICAkKCcjdHVybml0aW50b29sX3N0eWxlJylcbiAgICAgICAgICAgICAgICAucHJlcGVuZCgnPGRpdiBpZD1cImZ1bGwtZXJyb3JcIiBjbGFzcz1cImJveCBnZW5lcmFsYm94IG5vdGljZWJveFwiPicgKyBkYXRhLmVycm9yICsgJyAnICsgZGF0YS5tZXNzYWdlICsgJzwvZGl2PicpO1xuXG4gICAgICAgICAgICAvLyBDaGVjayBpZiB3ZSBoYXZlIGEgc3RhY2sgdHJhY2UgaW5jbHVkZWQuXG4gICAgICAgICAgICBpZiAoZGF0YS50cmFjZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihkYXRhLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoSlNPTi5zdHJpbmdpZnkoZGF0YS50cmFjZSwgbnVsbCwgNCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGxpZ2h0Qm94Q2xvc2VCdXR0b24oKSB7XG4gICAgJCgnYm9keScpLmFwcGVuZCgnPGRpdiBpZD1cInRpaV9jbG9zZV9iYXJcIj48YSBocmVmPVwiI1wiIG9uY2xpY2s9XCIkLmNvbG9yYm94LmNsb3NlKCk7IHJldHVybiBmYWxzZTtcIj4nICsgTS5zdHIudHVybml0aW50b29sdHdvLmNsb3NlYnV0dG9uICsgJzwvYT48L2Rpdj4nKTtcbn1cbiJdfQ==
